{"ast":null,"code":"import _objectSpread from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/christinejavier/Desktop/plentific-challenge/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport { fetchCategories as _fetchCategories } from './actions/categories';\nimport { fetchPros as _fetchPros } from './actions/pros';\nimport ProsFilter from './components/ProsFilter';\nimport ProsTable from './components/ProsTable';\nimport Paginator from './components/Paginator';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      category: {\n        value: ''\n      },\n      postcode: ''\n    };\n    _this.onFetchPros = _this.onFetchPros.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchCategories();\n    }\n  }, {\n    key: \"onFetchPros\",\n    value: function () {\n      var _onFetchPros = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(categoryVal, postcode, offset) {\n        var _this$props, fetchPros, listOfPros;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, fetchPros = _this$props.fetchPros, listOfPros = _this$props.listOfPros;\n                _context.next = 3;\n                return fetchPros(categoryVal, postcode, offset);\n\n              case 3:\n                this.setState({\n                  category: {\n                    value: categoryVal\n                  },\n                  postcode: postcode,\n                  listOfPros: listOfPros\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onFetchPros(_x, _x2, _x3) {\n        return _onFetchPros.apply(this, arguments);\n      }\n\n      return onFetchPros;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          list_of_pros = _this$props2.list_of_pros,\n          service_roles = _this$props2.service_roles;\n      var _this$state = this.state,\n          category = _this$state.category,\n          postcode = _this$state.postcode;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Your site\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), service_roles.categories && React.createElement(ProsFilter, {\n        categories: service_roles.categories,\n        fetchPros: this.onFetchPros,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), list_of_pros.pros && React.createElement(ProsTable, {\n        listOfPros: !isEmpty(list_of_pros.pros) ? list_of_pros.pros : [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), list_of_pros.totalProsCount && React.createElement(Paginator, {\n        onFetchPros: this.onFetchPros,\n        categoryId: category.value,\n        postcode: postcode,\n        totalProsCount: list_of_pros.totalProsCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state);\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchCategories: function fetchCategories() {\n      return dispatch(_fetchCategories());\n    },\n    fetchPros: function fetchPros(categoryName, postcode, offset) {\n      return dispatch(_fetchPros(categoryName, postcode, offset));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/christinejavier/Desktop/plentific-challenge/src/App.js"],"names":["React","Component","connect","isEmpty","fetchCategories","fetchPros","ProsFilter","ProsTable","Paginator","App","props","state","category","value","postcode","onFetchPros","bind","categoryVal","offset","listOfPros","setState","list_of_pros","service_roles","categories","pros","totalProsCount","mapStateToProps","mapDispatchToProps","dispatch","categoryName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport { fetchCategories } from './actions/categories';\nimport { fetchPros } from './actions/pros';\n\nimport ProsFilter from './components/ProsFilter';\nimport ProsTable from './components/ProsTable'\nimport Paginator from './components/Paginator'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      category: {\n        value: '',\n      },\n      postcode: '',\n    };\n    this.onFetchPros = this.onFetchPros.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchCategories();\n  }\n\n  async onFetchPros(categoryVal, postcode, offset) {\n    const {\n      fetchPros,\n      listOfPros,\n    } = this.props;\n\n    await fetchPros(categoryVal, postcode, offset);\n    this.setState({\n      category: {\n        value: categoryVal,\n      },\n      postcode,\n      listOfPros: listOfPros,\n    });\n  }\n\n  render() {\n    const {\n      list_of_pros,\n      service_roles,\n    } = this.props;\n    const {\n      category,\n      postcode,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header>\n          <p>Your site</p>\n        </header>\n        <hr/>\n        { service_roles.categories &&\n          <ProsFilter\n            categories={service_roles.categories}\n            fetchPros={this.onFetchPros}\n          />\n        }\n        <hr/>\n        { list_of_pros.pros &&\n          <ProsTable\n            listOfPros={!isEmpty(list_of_pros.pros) ? list_of_pros.pros : []}\n          />\n        }\n        { list_of_pros.totalProsCount &&\n          <Paginator\n            onFetchPros={this.onFetchPros}\n            categoryId={category.value}\n            postcode={postcode}\n            totalProsCount={list_of_pros.totalProsCount}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCategories: () => dispatch(fetchCategories()),\n  fetchPros: (categoryName, postcode, offset) => dispatch(fetchPros(categoryName, postcode, offset))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}