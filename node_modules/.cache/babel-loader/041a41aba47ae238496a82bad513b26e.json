{"ast":null,"code":"import _classCallCheck from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christinejavier/Desktop/plentific-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christinejavier/Desktop/plentific-challenge/src/components/Paginator.js\";\nimport React, { Component } from 'react';\nimport { toNumber, times } from 'lodash';\n\nvar getPageCountForTwentyProsPerPage = function getPageCountForTwentyProsPerPage(totalProsCount) {\n  return Math.ceil(toNumber(totalProsCount) / 20);\n};\n\nvar Paginator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Paginator, _Component);\n\n  function Paginator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Paginator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Paginator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generatePaginationLinks = function () {\n      var _this$props = _this.props,\n          onFetchPros = _this$props.onFetchPros,\n          categoryId = _this$props.categoryId,\n          postcode = _this$props.postcode,\n          totalProsCount = _this$props.totalProsCount;\n      var numOfPages = getPageCountForTwentyProsPerPage(totalProsCount);\n      return times(numOfPages, function (page) {\n        return React.createElement(\"button\", {\n          key: page,\n          onClick: function onClick() {\n            return onFetchPros(categoryId, postcode, page);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, page + 1);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Paginator, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onFetchPros = _this$props2.onFetchPros,\n          categoryId = _this$props2.categoryId,\n          postcode = _this$props2.postcode,\n          totalProsCount = _this$props2.totalProsCount;\n      var numOfPages = getPageCountForTwentyProsPerPage(totalProsCount);\n      var indexOflastPage = numOfPages < 20 ? 0 : numOfPages;\n      return React.createElement(\"div\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return onFetchPros(categoryId, postcode, 0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"\\xAB\"), this.generatePaginationLinks(), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return onFetchPros(categoryId, postcode, indexOflastPage);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"\\xBB\"));\n    }\n  }]);\n\n  return Paginator;\n}(Component);\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/christinejavier/Desktop/plentific-challenge/src/components/Paginator.js"],"names":["React","Component","toNumber","times","getPageCountForTwentyProsPerPage","totalProsCount","Math","ceil","Paginator","generatePaginationLinks","props","onFetchPros","categoryId","postcode","numOfPages","page","indexOflastPage"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,QAAhC;;AAEA,IAAMC,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAAC,cAAc;AAAA,SAAIC,IAAI,CAACC,IAAL,CAAUL,QAAQ,CAACG,cAAD,CAAR,GAA2B,EAArC,CAAJ;AAAA,CAAvD;;IAEMG,S;;;;;;;;;;;;;;;;;;UACJC,uB,GAA0B,YAAM;AAAA,wBAM1B,MAAKC,KANqB;AAAA,UAE9BC,WAF8B,eAE9BA,WAF8B;AAAA,UAG9BC,UAH8B,eAG9BA,UAH8B;AAAA,UAI9BC,QAJ8B,eAI9BA,QAJ8B;AAAA,UAK9BR,cAL8B,eAK9BA,cAL8B;AAO9B,UAAMS,UAAU,GAAGV,gCAAgC,CAACC,cAAD,CAAnD;AAEA,aAAOF,KAAK,CAACW,UAAD,EAAa,UAACC,IAAD,EAAU;AACjC,eAAQ;AAAQ,UAAA,GAAG,EAAEA,IAAb;AAAmB,UAAA,OAAO,EAAE;AAAA,mBAAMJ,WAAW,CAACC,UAAD,EAAaC,QAAb,EAAuBE,IAAvB,CAAjB;AAAA,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4EA,IAAI,GAAG,CAAnF,CAAR;AACD,OAFW,CAAZ;AAGD,K;;;;;;;6BAEQ;AAAA,yBAMH,KAAKL,KANF;AAAA,UAEPC,WAFO,gBAEPA,WAFO;AAAA,UAGPC,UAHO,gBAGPA,UAHO;AAAA,UAIPC,QAJO,gBAIPA,QAJO;AAAA,UAKPR,cALO,gBAKPA,cALO;AAOP,UAAMS,UAAU,GAAGV,gCAAgC,CAACC,cAAD,CAAnD;AACA,UAAMW,eAAe,GAAGF,UAAU,GAAG,EAAb,GAAkB,CAAlB,GAAsBA,UAA9C;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMH,WAAW,CAACC,UAAD,EAAaC,QAAb,EAAuB,CAAvB,CAAjB;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEI,KAAKJ,uBAAL,EAFJ,EAGE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAME,WAAW,CAACC,UAAD,EAAaC,QAAb,EAAuBG,eAAvB,CAAjB;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF;AAOD;;;;EAhCqBf,S;;AAmCxB,eAAeO,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { toNumber, times } from 'lodash';\n\nconst getPageCountForTwentyProsPerPage = totalProsCount => Math.ceil(toNumber(totalProsCount) / 20);\n\nclass Paginator extends Component {\n  generatePaginationLinks = () => {\n    const {\n    onFetchPros,\n    categoryId,\n    postcode,\n    totalProsCount,\n    } = this.props;\n    const numOfPages = getPageCountForTwentyProsPerPage(totalProsCount);\n\n    return times(numOfPages, (page) => {\n      return (<button key={page} onClick={() => onFetchPros(categoryId, postcode, page)}>{page + 1}</button>);\n    });\n  };\n\n  render() {\n    const {\n    onFetchPros,\n    categoryId,\n    postcode,\n    totalProsCount,\n    } = this.props;\n    const numOfPages = getPageCountForTwentyProsPerPage(totalProsCount);\n    const indexOflastPage = numOfPages < 20 ? 0 : numOfPages;\n\n    return (\n      <div className=\"pagination\">\n        <button onClick={() => onFetchPros(categoryId, postcode, 0)}>&#171;</button>\n        { this.generatePaginationLinks() }\n        <button onClick={() => onFetchPros(categoryId, postcode, indexOflastPage)}>&#187;</button>\n      </div>\n    );\n  }\n}\n\nexport default Paginator;\n"]},"metadata":{},"sourceType":"module"}